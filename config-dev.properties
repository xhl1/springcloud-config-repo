datasource.driverClassName=com.mysql.cj.jdbc.Driver
datasource.url=jdbc:mysql://192.168.3.142:3306/prm_database?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
datasource.username=root
datasource.password=123
#datasource.password={cipher}2007d52db8074609e733cf2f69129baaf92a4b3b6725fa631545868dc726717f
#datasource.password={cipher}AQBKeHnDH6xwtQgng6Yzb5PXY0c7aev4elRmEaWV42ng5+ujdlNbf5oqhIO9cL7bg7winpptzDDf7dVqlLw/RcgJlhq8IjAr0KuwWGZl9fv4jrvgVftIFoMNP70v/PiH9xB8GOdGAn9Tf6IF36VrUr5TWo4iUGSK6SuuY7/9aabtv3vrXoyr29YWU6xlM95PPscGNQCfIlTUv0hwHzElNm+LqbeQ5HX9Mq9k5yOmt9zEM25t3EGiwFc2CNTi0MbwlVMKuk1x1dqVwoPEPGvK6WsTrzOvG0byG5GkO2KuWFuXxKJg2pyi9iF4YCkzgxNLpLZ3HyFQjZPzjbWBgPYwIXF4Keh1uTJKnL9A1DGWFRe4Zuex3QErEnLALYq5FVb/ECQ=
#初始化连接数量，最大最小连接数
datasource.initialSize=5
datasource.maxActive=10
datasource.minIdle=3
#获取连接等待超时的时间
datasource.maxWait=600000
#超过时间限制是否回收
datasource.removeAbandoned=true
#超过时间限制多长
datasource.removeAbandonedTimeout=180
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
datasource.timeBetweenEvictionRunsMillis=600000
#配置一个连接在池中最小生存的时间，单位是毫秒
datasource.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句
datasource.validationQuery=SELECT 1 FROM DUAL
#申请连接的时候检测
datasource.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
datasource.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
datasource.testOnReturn=false
#打开PSCache，并且指定每个连接上PSCache的大小
datasource.poolPreparedStatements=true
datasource.maxPoolPreparedStatementPerConnectionSize=50
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
#监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall
datasource.filters=stat,log4j,wall
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
datasource.useGlobalDataSourceStat=true
##########################################
#redisson分布式锁配置 
redisson.address=101.200.121.42:16379
redisson.password=mondoraredis2016
#设置对于master节点的连接池中连接数最大为500
redisson.connectionPoolSize=500
#如果当前连接池里的连接数量超过了最小空闲连接数，而同时有连接空闲时间超过了该数值，那么这些连接将会自动被关闭，并从连接池里去掉。时间单位是毫秒
redisson.idleConnectionTimeout=10000
#同任何节点建立连接时的等待超时。时间单位是毫秒。
redisson.connectTimeout=30000
#等待节点回复命令的时间。该时间从命令发送成功时开始计时。
redisson.timeout=3000
redisson.pingTimeout=30000
#当与某个节点的连接断开时，等待与其重新建立连接的时间间隔。时间单位是毫秒。
redisson.reconnectionTimeout=3000
